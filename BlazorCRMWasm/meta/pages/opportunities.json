{
  "access": [
    "Authenticated"
  ],
  "components": [
    {
      "components": [
        {
          "name": "pageTitle",
          "size": "H1",
          "text": "Opportunities",
          "type": "heading"
        },
        {
          "components": [
            {
              "class": "col-md-12",
              "components": [
                {
                  "events": {
                    "click": [
                      {
                        "path": "add-opportunity",
                        "then": [
                          {
                            "code": "grid0.Reload();",
                            "type": "execute"
                          },
                          {
                            "code": "await InvokeAsync(() => { StateHasChanged(); });",
                            "type": "execute"
                          }
                        ],
                        "type": "popup"
                      }
                    ]
                  },
                  "icon": "add_circle_outline",
                  "name": "button0",
                  "style": {
                    "marginBottom": "10px"
                  },
                  "text": "Add",
                  "type": "button"
                },
                {
                  "allowFiltering": true,
                  "allowPaging": true,
                  "allowSorting": true,
                  "columns": [
                    {
                      "filterProperty": "User.FirstName",
                      "property": "Id",
                      "sortProperty": "User.FirstName",
                      "template": [
                        {
                          "name": "label0",
                          "text": "${data.User.FirstName}",
                          "type": "label"
                        },
                        {
                          "name": "label1",
                          "text": "${data.User.LastName}",
                          "type": "label"
                        }
                      ],
                      "title": "Id"
                    },
                    {
                      "property": "Amount",
                      "title": "Amount"
                    },
                    {
                      "property": "UserId",
                      "title": "User Id"
                    },
                    {
                      "filterProperty": "Contact.Email",
                      "property": "ContactId",
                      "sortProperty": "Contact.Email",
                      "template": "${data.Contact?.Email}",
                      "title": "Contact"
                    },
                    {
                      "filterProperty": "OpportunityStatus.Name",
                      "property": "StatusId",
                      "sortProperty": "OpportunityStatus.Name",
                      "template": "${data.OpportunityStatus?.Name}",
                      "title": "Opportunity Status"
                    },
                    {
                      "formatString": "{0:MM/dd/yyyy}",
                      "property": "CloseDate",
                      "title": "Close Date"
                    },
                    {
                      "property": "Name",
                      "title": "Name"
                    },
                    {
                      "filterable": false,
                      "sortable": false,
                      "template": [
                        {
                          "attributes": [
                            {
                              "name": "@onclick:stopPropagation",
                              "value": true
                            }
                          ],
                          "buttonStyle": "danger",
                          "events": {
                            "click": [
                              {
                                "error": [
                                  {
                                    "detail": "Unable to delete Opportunity",
                                    "severity": "error",
                                    "summary": "Error",
                                    "type": "notify"
                                  }
                                ],
                                "name": "CRM.deleteOpportunity",
                                "parameters": [
                                  {
                                    "name": "Id",
                                    "value": "${data.Id}"
                                  }
                                ],
                                "then": [
                                  {
                                    "code": "grid0.Reload();",
                                    "condition": "result != null",
                                    "type": "execute"
                                  }
                                ],
                                "type": "invoke"
                              }
                            ]
                          },
                          "icon": "close",
                          "name": "gridDeleteButton",
                          "size": "sm",
                          "text": "",
                          "type": "button"
                        }
                      ],
                      "textAlign": "center",
                      "width": "70px"
                    }
                  ],
                  "count": "${getOpportunitiesCount}",
                  "data": "${getOpportunitiesResult}",
                  "events": {
                    "loadData": [
                      {
                        "error": [
                          {
                            "detail": "Unable to load Opportunities",
                            "severity": "error",
                            "summary": "Error",
                            "type": "notify"
                          }
                        ],
                        "name": "CRM.getOpportunities",
                        "parameters": [
                          {
                            "name": "$top",
                            "value": "event.top"
                          },
                          {
                            "name": "$skip",
                            "value": "event.skip"
                          },
                          {
                            "name": "$count",
                            "value": "event.top != null && event.skip != null"
                          },
                          {
                            "name": "$filter",
                            "value": "${event.filter}"
                          },
                          {
                            "name": "$orderby",
                            "value": "${event.orderby}"
                          },
                          {
                            "name": "$expand",
                            "value": "Contact,OpportunityStatus,User"
                          }
                        ],
                        "then": [
                          {
                            "name": "getOpportunitiesResult",
                            "type": "set",
                            "value": "${result.Value.AsODataEnumerable()}",
                            "valueType": "IEnumerable<BlazorCrmWasm.Models.Crm.Opportunity>"
                          },
                          {
                            "name": "getOpportunitiesCount",
                            "type": "set",
                            "value": "${result.Count}",
                            "valueType": "int"
                          }
                        ],
                        "type": "invoke"
                      }
                    ],
                    "rowSelect": [
                      {
                        "parameters": [
                          {
                            "name": "Id",
                            "value": "${event.Id}"
                          }
                        ],
                        "path": "edit-opportunity",
                        "then": [
                          {
                            "code": "grid0.Reload();",
                            "type": "execute"
                          },
                          {
                            "code": "await InvokeAsync(() => { StateHasChanged(); });",
                            "type": "execute"
                          }
                        ],
                        "type": "popup"
                      }
                    ]
                  },
                  "itemType": "BlazorCrmWasm.Models.Crm.Opportunity",
                  "name": "grid0",
                  "title": "",
                  "type": "grid"
                }
              ],
              "type": "col"
            }
          ],
          "type": "row"
        }
      ],
      "container": "main",
      "type": "content"
    }
  ],
  "events": {
    "load": []
  },
  "layout": "Main",
  "name": "Opportunities"
}